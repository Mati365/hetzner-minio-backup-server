variant: fcos
version: 1.5.0
passwd:
  groups:
    - name: web

  users:
    - name: admin
      groups:
        - wheel
        - sudo
        - web
      ssh_authorized_keys:
        - ssh-rsa SSH_PUB_KEY

    - name: deploy
      groups:
        - web
      ssh_authorized_keys:
        - ssh-rsa SSH_PUB_KEY

systemd:
  units:
    - name: nftables.service
      enabled: true
      mask: false

    - name: selinux-proxy-rules.service
      enabled: true
      contents: |
        [Unit]
        Wants=sockets.target
        DefaultDependencies=no

        [Service]
        Type=oneshot
        ExecStartPre=/usr/sbin/setsebool -P systemd_socket_proxyd_connect_any 1
        ExecStart=/usr/sbin/setsebool -P systemd_socket_proxyd_bind_any 1

        [Install]
        WantedBy=sockets.target

    - name: proxy-to-http.socket
      enabled: true
      contents: |
        [Unit]
        After=selinux-proxy-rules.service
        PartOf=proxy-to-http.service

        [Socket]
        ListenStream=80

        [Install]
        WantedBy=sockets.target

    - name: proxy-to-http.service
      enabled: true
      contents: |
        [Unit]
        Requires=proxy-to-http.socket
        After=proxy-to-http.socket
        DefaultDependencies=no

        [Service]
        ExecStart=/usr/lib/systemd/systemd-socket-proxyd 0.0.0.0:9000

        [Install]
        WantedBy=sockets.target

    - name: proxy-to-https.socket
      enabled: true
      contents: |
        [Unit]
        After=selinux-proxy-rules.service
        PartOf=proxy-to-https.service

        [Socket]
        ListenStream=443

        [Install]
        WantedBy=sockets.target

    - name: proxy-to-https.service
      enabled: true
      contents: |
        [Unit]
        Requires=proxy-to-https.socket
        After=proxy-to-https.socket
        DefaultDependencies=no

        [Service]
        ExecStart=/usr/lib/systemd/systemd-socket-proxyd 0.0.0.0:9001

        [Install]
        WantedBy=sockets.target

storage:
  directories:
    - path: /home/deploy/.config
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/systemd
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/systemd/user
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/systemd/user/default.target.wants
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/containers
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/containers/systemd
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /var/srv/caddy/config
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /var/srv/caddy/data
      mode: 0751
      user:
        name: deploy
      group:
        name: web

    - path: /var/srv/minio/data
      mode: 0751
      user:
        name: deploy
      group:
        name: web

    - path: /var/srv/minio/policies
      mode: 0751
      user:
        name: deploy
      group:
        name: web

  trees:
    - local: networks
      path: /home/deploy/.config/containers/systemd

  files:
    - path: /var/lib/systemd/linger/deploy
      mode: 0644

    # Caddy
    - path: /home/deploy/.config/containers/systemd/caddy.container
      contents:
        local: services/caddy/quadlet/caddy.container

    - path: /var/srv/caddy/Caddyfile
      contents:
        local: services/caddy/container/Caddyfile
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    # Minio
    - path: /home/deploy/.config/containers/systemd/minio.container
      contents:
        local: services/minio/quadlet/minio.container

    - path: /var/srv/minio/policies/backup-bucket-rw-policy.json
      contents:
        local: services/minio/container/policies/backup-bucket-rw-policy.json
      mode: 0755
      user:
        name: deploy
      group:
        name: web

    - path: /home/deploy/.config/systemd/user/configure-minio.service
      mode: 0644
      contents:
        local: services/minio/systemd/configure-minio.service

    # Other things
    - path: /etc/sysconfig/nftables.conf
      mode: 0600
      overwrite: true
      contents:
        inline: |
          flush ruleset

          table inet filter {
            chain inbound_ipv4 {}

            chain inbound_ipv6 {
              icmpv6 type {
                nd-neighbor-solicit, nd-router-advert, nd-neighbor-advert
              } accept
            }

            chain inbound {
              type filter hook input priority 0; policy drop;
              ether type arp accept;

              # Allow traffic from established and related packets, drop invalid
              ct state vmap { established : accept, related : accept, invalid : drop }

              # Allow loopback traffic.
              iifname lo accept

              # Jump to chain according to layer 3 protocol using a verdict map
              meta protocol vmap { ip : jump inbound_ipv4, ip6 : jump inbound_ipv6 }

              # Allow some ports
              tcp dport { 22, 80 } accept
            }

            chain forward {
              type filter hook forward priority 0; policy drop;
            }
          }

    - path: /home/deploy/.config/systemd/user/wait-for-dns.service
      contents:
        local: services/wait-for-dns.service

  links:
    - path: /home/deploy/.config/systemd/user/default.target.wants/wait-for-dns.service
      user:
        name: deploy
      group:
        name: web
      target: /home/deploy/.config/systemd/user/wait-for-dns.service
      hard: false

    - path:  /home/deploy/.config/systemd/user/default.target.wants/configure-minio.service
      user:
        name: deploy
      group:
        name: web
      target: /home/deploy/.config/systemd/user/configure-minio.service
      hard: false
